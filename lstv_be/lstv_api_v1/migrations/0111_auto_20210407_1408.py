# Generated by Django 3.1 on 2021-04-07 14:08

import django.contrib.postgres.fields
from django.db import migrations, models
import enumchoicefield.fields
import lstv_api_v1.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('lstv_api_v1', '0110_merge_20210405_0152'),
    ]

    operations = [
        migrations.CreateModel(
            name='ResourceOrder',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('element_type', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.ResourceOrderingType, max_length=5)),
                ('element_id', models.UUIDField(db_index=True)),
                ('element_owner', models.UUIDField(db_index=True)),
                ('element_order', models.IntegerField(db_index=True)),
            ],
            options={
                'db_table': 'resource_ordering',
            },
        ),
        migrations.AlterField(
            model_name='directorytype',
            name='role_types',
            field=models.ManyToManyField(db_table='directories_to_role_types', related_name='related_directory', to='lstv_api_v1.BusinessRoleType'),
        ),
    ]
