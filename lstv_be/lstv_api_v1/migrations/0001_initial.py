# Generated by Django 3.1 on 2021-01-07 06:56

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import enumchoicefield.fields
import lstv_api_v1.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('user_type', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.UserTypeEnum, max_length=31)),
                ('email', models.EmailField(db_index=True, max_length=150, unique=True)),
                ('first_name', models.CharField(db_index=True, max_length=45, null=True)),
                ('last_name', models.CharField(db_index=True, max_length=45, null=True)),
                ('is_staff', models.BooleanField(db_index=True, default=False)),
                ('email_verification_at', models.DateTimeField(blank=True, null=True)),
                ('former_unique_guest_uuid', models.UUIDField(db_index=True, null=True)),
                ('legacy_password', models.CharField(max_length=150, null=True)),
                ('legacy_user_id', models.IntegerField(null=True)),
                ('is_inquiry_blocked', models.BooleanField(db_index=True, default=False)),
                ('is_in_page_messaging_blocked', models.BooleanField(db_index=True, default=False)),
                ('is_flagging_blocked', models.BooleanField(db_index=True, default=False)),
                ('is_reviewing_blocked', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='AggregationCache',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('context', models.CharField(db_index=True, max_length=100)),
                ('ttl_hours', models.IntegerField(db_index=True, default=0)),
                ('data_timestamp', models.DateTimeField(db_index=True, null=True)),
            ],
            options={
                'db_table': 'aggregation_cache',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('short_url_token', models.CharField(db_index=True, default=None, max_length=7, null=True)),
                ('url_history', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(db_index=True, max_length=150), db_index=True, null=True, size=None)),
                ('content_legacy', models.TextField(null=True)),
                ('content', models.JSONField(blank=True, null=True)),
                ('views', models.IntegerField(db_index=True, default=0)),
                ('card_impressions', models.IntegerField(db_index=True, default=0)),
                ('likes', models.IntegerField(db_index=True, default=0)),
                ('shares', models.IntegerField(db_index=True, default=0)),
            ],
            options={
                'db_table': 'articles',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100, null=True)),
                ('description', models.TextField(db_index=True, null=True)),
                ('link', models.CharField(db_index=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'brands',
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(null=True)),
                ('website', models.CharField(db_index=True, max_length=150, null=True)),
                ('legacy_term_id', models.IntegerField(db_index=True, null=True)),
                ('legacy_url', models.CharField(max_length=200)),
                ('legacy_channel_uuid', models.UUIDField(db_index=True, null=True)),
                ('card_impressions', models.IntegerField(db_index=True, default=0)),
                ('video_card_impressions', models.IntegerField(db_index=True, default=0)),
                ('channel_views', models.IntegerField(db_index=True, default=0)),
                ('video_views', models.IntegerField(db_index=True, default=0)),
                ('article_views', models.IntegerField(db_index=True, default=0)),
                ('likes', models.IntegerField(db_index=True, default=0)),
                ('shares', models.IntegerField(db_index=True, default=0)),
                ('weight_subscribers', models.IntegerField(db_index=True, default=0)),
                ('weight_videos', models.IntegerField(db_index=True, default=0)),
                ('weight_articles', models.IntegerField(db_index=True, default=0)),
                ('weight_photos', models.IntegerField(db_index=True, default=0)),
                ('can_work_remotely', models.BooleanField(db_index=True, null=True)),
                ('prefer_work_locally', models.BooleanField(db_index=True, null=True)),
                ('is_ecommerce_only', models.BooleanField(db_index=True, null=True)),
                ('is_custom_goods', models.BooleanField(db_index=True, null=True)),
                ('is_service_at_business_location_only', models.BooleanField(db_index=True, null=True)),
                ('has_multiple_locations', models.BooleanField(db_index=True, null=True)),
                ('associate_brands', models.ManyToManyField(db_table='businesses_to_associate_brands', related_name='businesses', to='lstv_api_v1.Brand')),
            ],
            options={
                'db_table': 'businesses',
            },
        ),
        migrations.CreateModel(
            name='BusinessGroupType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('name', models.CharField(db_index=True, max_length=100)),
            ],
            options={
                'db_table': 'business_grouping_types',
            },
        ),
        migrations.CreateModel(
            name='BusinessRoleFamilyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.CharField(db_index=True, max_length=100)),
            ],
            options={
                'db_table': 'business_role_family_types',
            },
        ),
        migrations.CreateModel(
            name='BusinessRoleType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('name_is', models.CharField(db_index=True, max_length=100, null=True)),
                ('name_what_business_does', models.CharField(db_index=True, max_length=100, null=True)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('weight_in_videos', models.IntegerField(db_index=True, default=0)),
                ('weight_in_businesses', models.IntegerField(db_index=True, default=0)),
                ('role_family_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.businessrolefamilytype')),
            ],
            options={
                'db_table': 'business_role_types',
                'ordering': ['-weight_in_videos'],
            },
        ),
        migrations.CreateModel(
            name='BusinessTeamMemberRolePermissionType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'business_team_member_role_permission_types',
            },
        ),
        migrations.CreateModel(
            name='BusinessVenueEventSpace',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('weight', models.IntegerField(db_index=True, default=0)),
                ('business', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='event_spaces', related_query_name='event_spaces', to='lstv_api_v1.business')),
            ],
            options={
                'db_table': 'business_venue_event_spaces',
            },
        ),
        migrations.CreateModel(
            name='BusinessVenueType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('weight_business', models.IntegerField(db_index=True, default=0)),
                ('weight_videos', models.IntegerField(db_index=True, default=0)),
            ],
            options={
                'db_table': 'business_venue_types',
            },
        ),
        migrations.CreateModel(
            name='CompositeContentElement',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('element_type', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.CompositeContentElementType, max_length=23)),
                ('slug', models.CharField(db_index=True, max_length=100, unique=True)),
                ('options', models.JSONField(null=True)),
            ],
            options={
                'db_table': 'composite_content_elements',
            },
        ),
        migrations.CreateModel(
            name='ContentFlag',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('element_type', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.ContentFlagElementEnumType, max_length=8)),
                ('element_id', models.UUIDField(db_index=True)),
                ('decision_at', models.DateTimeField(db_index=True, null=True)),
                ('complaint', models.TextField(db_index=True, null=True)),
                ('decision', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentFlagStaffDecision(1), enum_class=lstv_api_v1.models.ContentFlagStaffDecision, max_length=32)),
                ('decision_response', models.TextField(db_index=True, null=True)),
                ('flagged_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'content_flags',
            },
        ),
        migrations.CreateModel(
            name='ContentSearchQuery',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('target', models.CharField(db_index=True, max_length=100)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('header', models.CharField(db_index=True, max_length=100)),
                ('sub_header', models.TextField(db_index=True, null=True)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('cta_text', models.CharField(db_index=True, max_length=100, null=True)),
                ('cta_url', models.CharField(db_index=True, max_length=150, null=True)),
                ('initial_num_cards_desktop', models.IntegerField(db_index=True, default=16)),
                ('initial_num_cards_tablet', models.IntegerField(db_index=True, default=8)),
                ('initial_num_cards_mobile', models.IntegerField(db_index=True, default=6)),
                ('more_num_cards_desktop', models.IntegerField(db_index=True, default=16)),
                ('more_num_cards_tablet', models.IntegerField(db_index=True, default=8)),
                ('more_num_cards_mobile', models.IntegerField(db_index=True, default=6)),
                ('more_allowed', models.BooleanField(db_index=True, default=True)),
                ('content_type', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.ContentSearchQueryType, max_length=8)),
                ('content_search_type', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.ContentSearchQuerySourcingType, max_length=20)),
                ('content_sort_method', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.ContentSearchQueryOrderType, max_length=12)),
                ('fixed_content_items', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=100, null=True), null=True, size=None)),
                ('exclude_items', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=100, null=True), null=True, size=None)),
                ('search_items', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=100, null=True), null=True, size=None)),
                ('content_options', models.JSONField(null=True)),
            ],
            options={
                'db_table': 'content_search_queries',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('slug', models.CharField(db_index=True, max_length=100, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('name_ascii', models.CharField(db_index=True, max_length=100)),
                ('iso2', models.CharField(db_index=True, max_length=2)),
                ('iso3', models.CharField(db_index=True, max_length=3)),
                ('phone_prefix', models.CharField(db_index=True, max_length=50, null=True)),
                ('weight_videos', models.IntegerField(db_index=True, default=0)),
                ('weight_articles', models.IntegerField(db_index=True, default=0)),
                ('weight_businesses_based_at', models.IntegerField(db_index=True, default=0)),
                ('weight_businesses_work_at', models.IntegerField(db_index=True, default=0)),
                ('weight_businesses_based_at_role_breakdown', models.JSONField(null=True)),
                ('weight_businesses_work_at_role_breakdown', models.JSONField(null=True)),
            ],
            options={
                'db_table': 'geo_countries',
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('fips', models.CharField(db_index=True, max_length=10, null=True)),
                ('weight_videos', models.IntegerField(db_index=True, default=0)),
                ('weight_articles', models.IntegerField(db_index=True, default=0)),
                ('weight_businesses_based_at', models.IntegerField(db_index=True, default=0)),
                ('weight_businesses_work_at', models.IntegerField(db_index=True, default=0)),
                ('weight_businesses_based_at_role_breakdown', models.JSONField(null=True)),
                ('weight_businesses_work_at_role_breakdown', models.JSONField(null=True)),
            ],
            options={
                'db_table': 'geo_counties',
            },
        ),
        migrations.CreateModel(
            name='EmailVerificationRecord',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('email', models.CharField(db_index=True, max_length=100, unique=True)),
                ('status', models.CharField(db_index=True, max_length=100)),
                ('sub_status', models.CharField(db_index=True, max_length=100, null=True)),
                ('free_email_account', models.BooleanField(db_index=True, null=True)),
                ('account', models.CharField(db_index=True, max_length=100)),
                ('domain', models.CharField(db_index=True, max_length=100)),
                ('domain_age_days', models.IntegerField(db_index=True, null=True)),
                ('smtp_provider', models.CharField(db_index=True, max_length=100, null=True)),
                ('first_name', models.CharField(db_index=True, max_length=100, null=True)),
                ('last_name', models.CharField(db_index=True, max_length=100, null=True)),
                ('gender', models.CharField(db_index=True, max_length=100, null=True)),
                ('country', models.CharField(db_index=True, max_length=100, null=True)),
                ('region', models.CharField(db_index=True, max_length=100, null=True)),
                ('city', models.CharField(db_index=True, max_length=100, null=True)),
                ('zipcode', models.CharField(db_index=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'email_verification_records',
            },
        ),
        migrations.CreateModel(
            name='FileUploadModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.ImageField(default='', upload_to='./')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('purpose', enumchoicefield.fields.EnumChoiceField(enum_class=lstv_api_v1.models.ImagePurposeTypes, max_length=14)),
                ('legacy_url', models.CharField(db_index=True, max_length=250)),
                ('serve_url', models.CharField(db_index=True, max_length=250, null=True)),
                ('img_alt', models.CharField(db_index=True, max_length=100)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('width', models.IntegerField(db_index=True, null=True)),
                ('height', models.IntegerField(db_index=True, null=True)),
                ('focal_x_pos_percent', models.IntegerField(db_index=True, null=True)),
                ('focal_y_pos_percent', models.IntegerField(db_index=True, null=True)),
                ('svg_placeholder_data', models.TextField(null=True)),
            ],
            options={
                'db_table': 'images',
            },
        ),
        migrations.CreateModel(
            name='InterviewPageType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('title_new_post', models.CharField(db_index=True, max_length=100)),
                ('title_existing_post', models.CharField(db_index=True, max_length=100, null=True)),
                ('order', models.IntegerField(db_index=True)),
                ('description', models.CharField(db_index=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'interview_page_types',
            },
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip', models.CharField(db_index=True, max_length=45)),
                ('processed', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'db_table': 'ip_to_location',
            },
        ),
        migrations.CreateModel(
            name='LegacyViewsLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('legacy_created', models.CharField(max_length=45)),
                ('legacy_user_id', models.IntegerField(null=True)),
                ('legacy_post_id', models.IntegerField(null=True)),
                ('migrated', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'db_table': 'legacy_views_log',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('label', models.CharField(db_index=True, max_length=150, null=True)),
                ('address1', models.CharField(db_index=True, max_length=150, null=True)),
                ('address2', models.CharField(blank=True, db_index=True, max_length=150, null=True)),
                ('zipcode', models.CharField(db_index=True, max_length=10, null=True)),
                ('sanitized', models.BooleanField(db_index=True, default=False)),
                ('legacy_city', models.CharField(db_index=True, max_length=150, null=True)),
                ('legacy_state_province', models.CharField(db_index=True, max_length=150, null=True)),
                ('legacy_country', models.CharField(db_index=True, max_length=150, null=True)),
                ('legacy_migrated', models.BooleanField(db_index=True, default=False)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.country')),
                ('county', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.county')),
            ],
            options={
                'db_table': 'locations',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('message_context', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.MessageContextTypeEnum, max_length=19, null=True)),
                ('deliver_via_email', models.BooleanField(db_index=True, default=False)),
                ('deliver_via_text_message', models.BooleanField(db_index=True, default=False)),
                ('message_status', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.ExternalMessageDeliveryStatus, max_length=17, null=True)),
                ('message_content', models.TextField(db_index=True, null=True)),
                ('fixed_response', models.TextField(db_index=True, null=True)),
                ('edited_at', models.DateTimeField(db_index=True, null=True)),
                ('processor_data', models.JSONField(default=dict)),
                ('thread_id', models.UUIDField(db_index=True)),
                ('likes', models.IntegerField(db_index=True, default=0)),
                ('pending_at', models.DateTimeField(db_index=True, null=True)),
                ('deferred_bounced_dropped_at', models.DateTimeField(db_index=True, null=True)),
                ('delivered_at', models.DateTimeField(db_index=True, null=True)),
                ('opened_at', models.DateTimeField(db_index=True, null=True)),
                ('clicked_at', models.DateTimeField(db_index=True, null=True)),
                ('spam_at', models.DateTimeField(db_index=True, null=True)),
                ('unsubscribed_at', models.DateTimeField(db_index=True, null=True)),
                ('processor_message_id', models.CharField(db_index=True, max_length=100)),
                ('delivery_email', models.CharField(db_index=True, max_length=150)),
                ('delivery_phone', models.CharField(db_index=True, max_length=150)),
                ('flags', models.ManyToManyField(db_table='messages_to_flags', related_name='messages', to='lstv_api_v1.ContentFlag')),
                ('from_business', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_from', to='lstv_api_v1.business')),
                ('from_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_from', to=settings.AUTH_USER_MODEL)),
                ('parent_message', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lstv_api_v1.message')),
                ('to_business', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_message_to', to='lstv_api_v1.business')),
                ('to_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_to', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messages',
            },
        ),
        migrations.CreateModel(
            name='NavigationBarContent',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('name_id', models.IntegerField(db_index=True)),
                ('parent_id', models.IntegerField(db_index=True)),
                ('level', models.IntegerField(db_index=True)),
                ('url', models.CharField(db_index=True, max_length=150)),
            ],
            options={
                'db_table': 'navbar_content',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('legacy_term_id', models.IntegerField(db_index=True, null=True)),
                ('legacy_user_id', models.IntegerField(db_index=True, null=True)),
                ('legacy_post_id', models.IntegerField(db_index=True, null=True)),
                ('card_impressions', models.IntegerField(db_index=True, default=0)),
                ('likes', models.IntegerField(db_index=True, default=0)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.image')),
                ('owner_business', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.business')),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'photos',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('title', models.CharField(db_index=True, max_length=150, null=True)),
                ('slug', models.CharField(db_index=True, max_length=150)),
                ('type', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.PostTypeEnum, max_length=5)),
                ('visibility', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.PostVisibilityEnum(2), enum_class=lstv_api_v1.models.PostVisibilityEnum, max_length=16)),
                ('legacy_post_id', models.IntegerField(db_index=True, null=True)),
                ('legacy_url', models.CharField(max_length=200)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('editors', models.ManyToManyField(db_table='posts_to_editors', related_name='editable_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'posts',
            },
        ),
        migrations.CreateModel(
            name='Properties',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('key', models.CharField(db_index=True, max_length=100)),
                ('value_text', models.TextField(null=True)),
                ('value_integer', models.IntegerField(db_index=True, null=True)),
                ('value_float', models.FloatField(db_index=True, null=True)),
                ('value_date', models.DateField(db_index=True, null=True)),
                ('value_json', models.JSONField(null=True)),
                ('expires_at', models.DateTimeField(db_index=True, null=True)),
            ],
            options={
                'db_table': 'properties',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('value', models.JSONField()),
                ('category', models.CharField(db_index=True, max_length=100)),
            ],
            options={
                'db_table': 'settings',
            },
        ),
        migrations.CreateModel(
            name='ShoppingItem',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('sold_by', models.CharField(db_index=True, max_length=100)),
                ('shop_url', models.CharField(db_index=True, max_length=250)),
                ('thumbnail_url', models.CharField(db_index=True, max_length=250)),
                ('price_cents', models.IntegerField(db_index=True)),
                ('old_price_cents', models.IntegerField(db_index=True, null=True)),
                ('discount_label', models.CharField(db_index=True, max_length=35, null=True)),
                ('currency_symbol', models.CharField(db_index=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'shopping_items',
            },
        ),
        migrations.CreateModel(
            name='SocialNetworkTypes',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.CharField(db_index=True, max_length=100, unique=True)),
                ('link_pattern', models.CharField(db_index=True, max_length=100)),
            ],
            options={
                'db_table': 'social_network_types',
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('title', models.CharField(db_index=True, max_length=100)),
                ('legacy_term_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, db_index=True, null=True, size=None)),
            ],
            options={
                'db_table': 'songs',
            },
        ),
        migrations.CreateModel(
            name='SongPerformer',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('legacy_term_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, db_index=True, null=True, size=None)),
            ],
            options={
                'db_table': 'song_performers',
            },
        ),
        migrations.CreateModel(
            name='TagFamilyType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('slug', models.CharField(db_index=True, max_length=100, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('legacy_term_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, db_index=True, null=True, size=None)),
                ('exclude_from_awards_display', models.BooleanField(db_index=True, default=False)),
                ('tag_group', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.TagFamilyGroupType(1), enum_class=lstv_api_v1.models.TagFamilyGroupType, max_length=12)),
            ],
            options={
                'db_table': 'tag_family_types',
            },
        ),
        migrations.CreateModel(
            name='TagType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('slug', models.CharField(db_index=True, max_length=100, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('legacy_term_id', models.IntegerField(db_index=True, null=True)),
                ('legacy_url', models.CharField(max_length=200)),
                ('weight', models.IntegerField(db_index=True, default=0)),
                ('weight_videos', models.IntegerField(db_index=True, default=0)),
                ('weight_articles', models.IntegerField(db_index=True, default=0)),
                ('importance', models.CharField(db_index=True, default='00001', max_length=20)),
                ('is_public', models.BooleanField(db_index=True, default=True)),
                ('card_impressions', models.IntegerField(db_index=True, default=0)),
                ('tag_family_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tags', to='lstv_api_v1.tagfamilytype')),
                ('thumbnail', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.image')),
            ],
            options={
                'db_table': 'tag_types',
                'ordering': ['-importance'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('short_url_token', models.CharField(db_index=True, default=None, max_length=7, null=True)),
                ('url_history', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(db_index=True, max_length=150), db_index=True, null=True, size=None)),
                ('event_date', models.DateField(db_index=True, null=True)),
                ('visibility', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.PostVisibilityEnum(2), enum_class=lstv_api_v1.models.PostVisibilityEnum, max_length=16)),
                ('order', models.IntegerField(db_index=True, default=1)),
                ('title', models.CharField(db_index=True, max_length=150)),
                ('views', models.IntegerField(db_index=True, default=0)),
                ('card_impressions', models.IntegerField(db_index=True, default=0)),
                ('likes', models.IntegerField(db_index=True, default=0)),
                ('shares', models.IntegerField(db_index=True, default=0)),
                ('content', models.TextField(null=True)),
            ],
            options={
                'db_table': 'videos',
                'ordering': ['-order'],
            },
        ),
        migrations.CreateModel(
            name='VideoSource',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('filename', models.CharField(db_index=True, max_length=150, null=True)),
                ('type', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.VideoTypeEnum, max_length=8)),
                ('purpose', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.VideoPurposeEnum(1), enum_class=lstv_api_v1.models.VideoPurposeEnum, max_length=20)),
                ('source_url', models.CharField(db_index=True, max_length=200, null=True)),
                ('status', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.VideoStatusEnum, max_length=15)),
                ('uploaded_at', models.DateTimeField(db_index=True, null=True)),
                ('process_started_at', models.DateTimeField(db_index=True, null=True)),
                ('process_complete_at', models.DateTimeField(db_index=True, null=True)),
                ('media_id', models.CharField(db_index=True, max_length=50)),
                ('duration', models.IntegerField(db_index=True, null=True)),
                ('size', models.BigIntegerField(db_index=True, null=True)),
                ('preview_gif_url', models.CharField(db_index=True, max_length=200, null=True)),
                ('legacy_post_id', models.IntegerField(db_index=True, null=True)),
                ('legacy_user_id', models.IntegerField(db_index=True, null=True)),
                ('external_verified_at', models.DateTimeField(blank=True, null=True)),
                ('width', models.IntegerField(db_index=True, null=True)),
                ('height', models.IntegerField(db_index=True, null=True)),
                ('views', models.IntegerField(db_index=True, default=0)),
                ('likes', models.IntegerField(db_index=True, default=0)),
                ('owner_business', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.business')),
                ('thumbnail', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.image')),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'video_sources',
            },
        ),
        migrations.CreateModel(
            name='VideoType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('name', models.CharField(db_index=True, max_length=100)),
            ],
            options={
                'db_table': 'video_types',
            },
        ),
        migrations.CreateModel(
            name='WeightedWorksWith',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('weight', models.IntegerField(db_index=True, default=0)),
                ('weight_last_month', models.IntegerField(db_index=True, default=0)),
                ('weight_last_quarter', models.IntegerField(db_index=True, default=0)),
                ('weight_last_six_month', models.IntegerField(db_index=True, default=0)),
                ('weight_last_year', models.IntegerField(db_index=True, default=0)),
                ('business_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businessA', to='lstv_api_v1.business')),
                ('business_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businessB', to='lstv_api_v1.business')),
            ],
            options={
                'db_table': 'weighted_works_with',
            },
        ),
        migrations.CreateModel(
            name='VideoViewLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('unique_guest_uuid', models.UUIDField(db_index=True, null=True)),
                ('migrated_to_log_cluster', models.BooleanField(db_index=True, default=False)),
                ('legacy_post_id', models.IntegerField(db_index=True, null=True)),
                ('legacy_user_id', models.IntegerField(db_index=True, null=True)),
                ('ip', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.ipaddress')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='video_view_logs', related_query_name='video_view_logs', to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='video_view_logs', related_query_name='video_views_logs', to='lstv_api_v1.video')),
            ],
            options={
                'db_table': 'video_view_log',
            },
        ),
        migrations.CreateModel(
            name='VideoVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('title', models.CharField(db_index=True, max_length=150, null=True)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.video')),
                ('video_source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.videosource')),
            ],
            options={
                'db_table': 'videos_to_video_sources',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='VideoPlaybackLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('video_identifier', models.UUIDField(db_index=True, null=True)),
                ('time_watched', models.FloatField(db_index=True, null=True)),
                ('unique_guest_uuid', models.UUIDField(db_index=True, null=True)),
                ('duration', models.FloatField(db_index=True, null=True)),
                ('ad_title', models.CharField(db_index=True, max_length=100, null=True)),
                ('ad_duration', models.FloatField(db_index=True, null=True)),
                ('ad_time_watched', models.FloatField(db_index=True, null=True)),
                ('ad_clicked', models.BooleanField(db_index=True, null=True)),
                ('ad_clicked_time_index', models.FloatField(db_index=True, null=True)),
                ('migrated_to_log_cluster', models.BooleanField(db_index=True, default=False)),
                ('ip', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.ipaddress')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='video_playbacks', related_query_name='video_playbacks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'video_playback_log',
            },
        ),
        migrations.CreateModel(
            name='VideoPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.photo')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.video')),
            ],
            options={
                'db_table': 'videos_to_photos',
            },
        ),
        migrations.CreateModel(
            name='VideoBusinessCapacityType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('legacy_term_id', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(db_index=True), blank=True, db_index=True, size=None)),
                ('business_role_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.businessroletype')),
            ],
            options={
                'db_table': 'video_business_capacity_types',
            },
        ),
        migrations.CreateModel(
            name='VideoBusiness',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('primary', models.BooleanField(db_index=True, default=None, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.business')),
                ('business_capacity_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.videobusinesscapacitytype')),
                ('business_role_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.businessroletype')),
                ('event_space', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.businessvenueeventspace')),
                ('venue_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.businessvenuetype')),
            ],
            options={
                'db_table': 'video_business',
            },
        ),
        migrations.AddField(
            model_name='video',
            name='businesses',
            field=models.ManyToManyField(db_table='videos_to_businesses', related_name='videos', to='lstv_api_v1.VideoBusiness'),
        ),
        migrations.AddField(
            model_name='video',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.location'),
        ),
        migrations.AddField(
            model_name='video',
            name='photos',
            field=models.ManyToManyField(related_name='videos', through='lstv_api_v1.VideoPhoto', to='lstv_api_v1.Photo'),
        ),
        migrations.AddField(
            model_name='video',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='videos', related_query_name='videos', to='lstv_api_v1.post'),
        ),
        migrations.AddField(
            model_name='video',
            name='properties',
            field=models.ManyToManyField(db_table='videos_to_properties', related_name='videos', to='lstv_api_v1.Properties'),
        ),
        migrations.AddField(
            model_name='video',
            name='q_and_a',
            field=models.ManyToManyField(db_table='videos_to_questions', related_name='videos', to='lstv_api_v1.Message'),
        ),
        migrations.AddField(
            model_name='video',
            name='shopping_items',
            field=models.ManyToManyField(db_table='videos_to_shopping_items', related_name='videos', to='lstv_api_v1.ShoppingItem'),
        ),
        migrations.AddField(
            model_name='video',
            name='songs',
            field=models.ManyToManyField(db_table='videos_to_songs', related_name='videos', to='lstv_api_v1.Song'),
        ),
        migrations.AddField(
            model_name='video',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.videotype'),
        ),
        migrations.AddField(
            model_name='video',
            name='vibes',
            field=models.ManyToManyField(db_table='videos_to_vibe_types', related_name='videos', to='lstv_api_v1.TagType'),
        ),
        migrations.AddField(
            model_name='video',
            name='videos',
            field=models.ManyToManyField(related_name='videos', through='lstv_api_v1.VideoVideo', to='lstv_api_v1.VideoSource'),
        ),
        migrations.CreateModel(
            name='UserEventLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('domain', models.CharField(db_index=True, max_length=100, null=True)),
                ('action', models.CharField(db_index=True, max_length=100)),
                ('event', models.CharField(db_index=True, max_length=100)),
                ('severity', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.UserEventSeverityEnum(1), enum_class=lstv_api_v1.models.UserEventSeverityEnum, max_length=7)),
                ('unique_guest_uuid', models.UUIDField(db_index=True, null=True)),
                ('data', models.JSONField(blank=True, null=True)),
                ('migrated_to_log_cluster', models.BooleanField(db_index=True, default=False)),
                ('ip', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.ipaddress')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_events_log',
            },
        ),
        migrations.CreateModel(
            name='StateProvince',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('name_ascii', models.CharField(db_index=True, max_length=100)),
                ('type', models.CharField(db_index=True, max_length=45)),
                ('code', models.CharField(db_index=True, max_length=15, null=True)),
                ('weight_videos', models.IntegerField(db_index=True, default=0)),
                ('weight_articles', models.IntegerField(db_index=True, default=0)),
                ('weight_businesses_based_at', models.IntegerField(db_index=True, default=0)),
                ('weight_businesses_work_at', models.IntegerField(db_index=True, default=0)),
                ('weight_businesses_based_at_role_breakdown', models.JSONField(null=True)),
                ('weight_businesses_work_at_role_breakdown', models.JSONField(null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.country')),
                ('thumbnail', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.image')),
            ],
            options={
                'db_table': 'geo_states_provinces',
            },
        ),
        migrations.AddField(
            model_name='song',
            name='song_performer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.songperformer'),
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('profile_account', models.CharField(db_index=True, max_length=100)),
                ('social_network', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.socialnetworktypes')),
            ],
            options={
                'db_table': 'social_links',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('element_type', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.ReviewElementTypeEnum, max_length=8)),
                ('element_id', models.UUIDField(db_index=True)),
                ('rating', models.FloatField(db_index=True, default=0.0)),
                ('title', models.CharField(db_index=True, max_length=100)),
                ('flags', models.ManyToManyField(db_table='reviews_to_flags', related_name='review', to='lstv_api_v1.ContentFlag')),
                ('review', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.message')),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='RequestLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('unique_guest_uuid', models.UUIDField(db_index=True, null=True)),
                ('method', models.CharField(db_index=True, max_length=10)),
                ('url', models.CharField(db_index=True, max_length=150)),
                ('request_path', models.CharField(db_index=True, max_length=250, null=True)),
                ('data', models.JSONField(blank=True, null=True)),
                ('cookies_in', models.JSONField(blank=True, null=True)),
                ('cookies_out', models.JSONField(blank=True, null=True)),
                ('result_code', models.IntegerField(db_index=True)),
                ('result', models.TextField(null=True)),
                ('migrated_to_log_cluster', models.BooleanField(db_index=True, default=False)),
                ('ip', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.ipaddress')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'request_log',
            },
        ),
        migrations.CreateModel(
            name='PublicTeamPerson',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('title', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(db_index=True, null=True)),
                ('headshot_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lstv_api_v1.image')),
            ],
            options={
                'db_table': 'public_business_team_people',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='properties',
            field=models.ManyToManyField(db_table='posts_to_properties', related_name='posts', to='lstv_api_v1.Properties'),
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('type', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.PlaceType(1), enum_class=lstv_api_v1.models.PlaceType, max_length=8)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.PlaceSource(1), enum_class=lstv_api_v1.models.PlaceSource, max_length=6)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('name_ascii', models.CharField(db_index=True, max_length=100)),
                ('alt_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(db_index=True, max_length=45, null=True), db_index=True, null=True, size=None)),
                ('alt_names_ascii', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(db_index=True, max_length=45, null=True), db_index=True, null=True, size=None)),
                ('lat', models.DecimalField(decimal_places=6, max_digits=9)),
                ('long', models.DecimalField(decimal_places=6, max_digits=9)),
                ('timezone', models.CharField(db_index=True, max_length=50)),
                ('admin_type', models.CharField(db_index=True, max_length=50, null=True)),
                ('ranking', models.IntegerField(db_index=True, default=0, null=True)),
                ('population_urban', models.IntegerField(db_index=True, default=0, null=True)),
                ('population_municipal', models.IntegerField(db_index=True, default=0, null=True)),
                ('import_id', models.IntegerField(db_index=True, default=0, null=True)),
                ('weight_videos', models.IntegerField(db_index=True, default=0)),
                ('weight_articles', models.IntegerField(db_index=True, default=0)),
                ('weight_businesses_based_at', models.IntegerField(db_index=True, default=0)),
                ('weight_businesses_work_at', models.IntegerField(db_index=True, default=0)),
                ('weight_businesses_based_at_role_breakdown', models.JSONField(null=True)),
                ('weight_businesses_work_at_role_breakdown', models.JSONField(null=True)),
                ('zipcodes', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(db_index=True, max_length=10), db_index=True, null=True, size=None)),
                ('county_name', models.CharField(db_index=True, max_length=100, null=True)),
                ('married_percent', models.FloatField(db_index=True, null=True)),
                ('race_white_percent', models.FloatField(db_index=True, null=True)),
                ('race_black_percent', models.FloatField(db_index=True, null=True)),
                ('race_asian_percent', models.FloatField(db_index=True, null=True)),
                ('race_native_percent', models.FloatField(db_index=True, null=True)),
                ('race_pacific_percent', models.FloatField(db_index=True, null=True)),
                ('race_other_percent', models.FloatField(db_index=True, null=True)),
                ('race_multiple_percent', models.FloatField(db_index=True, null=True)),
                ('age_20s_percent', models.FloatField(db_index=True, null=True)),
                ('age_30s_percent', models.FloatField(db_index=True, null=True)),
                ('age_40s_percent', models.FloatField(db_index=True, null=True)),
                ('divorced_percent', models.FloatField(db_index=True, null=True)),
                ('never_married_percent', models.FloatField(db_index=True, null=True)),
                ('family_dual_income_percent', models.FloatField(db_index=True, null=True)),
                ('income_household_under_5_percent', models.FloatField(db_index=True, null=True)),
                ('income_household_5_to_10_percent', models.FloatField(db_index=True, null=True)),
                ('income_household_10_to_15_percent', models.FloatField(db_index=True, null=True)),
                ('income_household_15_to_20_percent', models.FloatField(db_index=True, null=True)),
                ('income_household_20_to_25_percent', models.FloatField(db_index=True, null=True)),
                ('income_household_25_to_35_percent', models.FloatField(db_index=True, null=True)),
                ('income_household_35_to_50_percent', models.FloatField(db_index=True, null=True)),
                ('income_household_50_to_75_percent', models.FloatField(db_index=True, null=True)),
                ('income_household_75_to_100_percent', models.FloatField(db_index=True, null=True)),
                ('income_household_100_to_150_percent', models.FloatField(db_index=True, null=True)),
                ('income_household_over_150_percent', models.FloatField(db_index=True, null=True)),
                ('home_value', models.IntegerField(db_index=True, null=True)),
                ('rent_percent_of_household_income', models.FloatField(db_index=True, null=True)),
                ('income_household_six_figure_percent', models.FloatField(db_index=True, null=True)),
                ('income_household_median', models.IntegerField(db_index=True, null=True)),
                ('health_uninsured_percent', models.FloatField(db_index=True, null=True)),
                ('age_median', models.FloatField(db_index=True, null=True)),
                ('education_high_school_percent', models.FloatField(db_index=True, null=True)),
                ('education_bachelors_percent', models.FloatField(db_index=True, null=True)),
                ('education_graduate_percent', models.FloatField(db_index=True, null=True)),
                ('education_college_or_above_percent', models.FloatField(db_index=True, null=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.country')),
                ('county', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.county')),
                ('state_province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.stateprovince')),
            ],
            options={
                'db_table': 'geo_places',
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('type', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.PhoneTypeEnum(3), enum_class=lstv_api_v1.models.PhoneTypeEnum, max_length=8)),
                ('number', models.CharField(max_length=20, null=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.country')),
            ],
            options={
                'db_table': 'phones',
            },
        ),
        migrations.CreateModel(
            name='OrganizedEvent',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('title', models.CharField(db_index=True, max_length=150)),
                ('tagline', models.TextField(db_index=True, null=True)),
                ('event_date_time', models.DateTimeField(db_index=True)),
                ('cta_url', models.CharField(db_index=True, max_length=150)),
                ('is_virtual', models.BooleanField(db_index=True, default=False, max_length=150)),
                ('virtual_event_location_label', models.CharField(db_index=True, max_length=150)),
                ('business', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.business')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lstv_api_v1.location')),
                ('logo_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lstv_api_v1.image')),
            ],
            options={
                'db_table': 'organized_events',
            },
        ),
        migrations.AddField(
            model_name='location',
            name='place',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.place'),
        ),
        migrations.AddField(
            model_name='location',
            name='state_province',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.stateprovince'),
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('element_type', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.LikableElementType, max_length=8)),
                ('unique_guest_uuid', models.UUIDField(db_index=True, null=True)),
                ('element_id', models.UUIDField(db_index=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'likes',
            },
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.location'),
        ),
        migrations.CreateModel(
            name='InterviewType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('audience', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.UserTypeEnum, max_length=31)),
                ('new_post_page_offset', models.IntegerField(db_index=True, default=1)),
                ('existing_post_page_offset', models.IntegerField(db_index=True)),
                ('audience_role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.businessroletype')),
                ('interview_pages', models.ManyToManyField(db_table='interview_type_to_pages', related_name='interview_type', to='lstv_api_v1.InterviewPageType')),
            ],
            options={
                'db_table': 'interview_types',
            },
        ),
        migrations.CreateModel(
            name='InterviewPropertyType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('display_name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('business_role_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.businessroletype')),
            ],
            options={
                'db_table': 'interview_property_types',
            },
        ),
        migrations.AddField(
            model_name='interviewpagetype',
            name='questions',
            field=models.ManyToManyField(db_table='interview_page_type_to_questions', related_name='interview_page_type', to='lstv_api_v1.InterviewPropertyType'),
        ),
        migrations.CreateModel(
            name='Discover',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('type', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.DiscoverElementTypeEnum, max_length=12)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.CharField(db_index=True, max_length=100, null=True)),
                ('order', models.CharField(db_index=True, max_length=50, unique=True)),
                ('content_query', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lstv_api_v1.contentsearchquery')),
                ('element_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lstv_api_v1.image')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lstv_api_v1.discover')),
                ('properties', models.ManyToManyField(db_table='discover_to_properties', related_name='discover', to='lstv_api_v1.Properties')),
            ],
            options={
                'db_table': 'discover',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='county',
            name='state_province',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.stateprovince'),
        ),
        migrations.AddField(
            model_name='county',
            name='thumbnail',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.image'),
        ),
        migrations.AddField(
            model_name='country',
            name='thumbnail',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.image'),
        ),
        migrations.CreateModel(
            name='CompositeContentBindingItem',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('device_availability', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.CompositeContentElementAvailability(1), enum_class=lstv_api_v1.models.CompositeContentElementAvailability, max_length=22)),
                ('composite_content_element', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.compositecontentelement')),
            ],
            options={
                'db_table': 'composite_content_biding_items',
            },
        ),
        migrations.CreateModel(
            name='CompositeContentBinding',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('slug', models.CharField(db_index=True, max_length=100, unique=True)),
                ('options', models.JSONField(null=True)),
                ('composite_content_elements', models.ManyToManyField(db_table='composite_content_bindings_to_elements', related_name='composite_content_bindings', to='lstv_api_v1.CompositeContentBindingItem')),
            ],
            options={
                'db_table': 'composite_content_bindings',
            },
        ),
        migrations.CreateModel(
            name='CardImpressionsLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('unique_guest_uuid', models.UUIDField(db_index=True, null=True)),
                ('element_type', enumchoicefield.fields.EnumChoiceField(db_index=True, enum_class=lstv_api_v1.models.ContentSearchQueryType, max_length=8)),
                ('element_id', models.UUIDField(null=True)),
                ('event_date', models.DateField(db_index=True, null=True)),
                ('num_impressions', models.IntegerField(db_index=True, default=1)),
                ('migrated_to_log_cluster', models.BooleanField(db_index=True, default=False)),
                ('ip', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.ipaddress')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='card_impression_log', related_query_name='card_impression_log', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'card_impression_log',
            },
        ),
        migrations.CreateModel(
            name='BusinessWeightedWorkLocationHistory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('weight', models.IntegerField(db_index=True, default=0)),
                ('first_recorded_work', models.DateField(db_index=True, null=True)),
                ('latest_recorded_work', models.DateField(db_index=True, null=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.country')),
                ('county', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.county')),
                ('place', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.place')),
                ('state_province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.stateprovince')),
            ],
            options={
                'db_table': 'business_weighted_work_location_history',
            },
        ),
        migrations.CreateModel(
            name='BusinessWeightedRoleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(db_index=True, default=0)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.business')),
                ('role_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.businessroletype')),
            ],
            options={
                'db_table': 'business_to_weighted_role_types',
                'ordering': ['weight'],
            },
        ),
        migrations.CreateModel(
            name='BusinessVenueTypeInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.business')),
                ('venue_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.businessvenuetype')),
            ],
            options={
                'db_table': 'business_venue_type_info',
            },
        ),
        migrations.AddField(
            model_name='businessvenueeventspace',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.businessvenuetype'),
        ),
        migrations.CreateModel(
            name='BusinessTeamMemberRoleType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.CharField(db_index=True, max_length=100, unique=True)),
                ('permissions', models.ManyToManyField(db_table='business_team_member_role_types_to_role_permission_types', related_name='business_team_member_role_types_to_role_permission_types', to='lstv_api_v1.BusinessTeamMemberRolePermissionType')),
            ],
            options={
                'db_table': 'business_team_member_role_types',
            },
        ),
        migrations.CreateModel(
            name='BusinessTeamMember',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelState(1), enum_class=lstv_api_v1.models.ContentModelState, max_length=16)),
                ('state_desc', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(db_index=True, max_length=200, null=True), null=True, size=None)),
                ('source', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.ContentModelSource(1), enum_class=lstv_api_v1.models.ContentModelSource, max_length=7)),
                ('source_desc', models.TextField(db_index=True, max_length=100, null=True)),
                ('delete_token', models.TextField(db_index=True, max_length=15, null=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('invitation_code_pending', models.UUIDField(db_index=True, null=True)),
                ('invited_at', models.DateTimeField(db_index=True, null=True)),
                ('accepted_at', models.DateTimeField(db_index=True, null=True)),
                ('business', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='team_members', related_query_name='team_members', to='lstv_api_v1.business')),
                ('roles', models.ManyToManyField(db_table='business_team_members_to_team_member_role_types', related_name='business_team_members', to='lstv_api_v1.BusinessTeamMemberRoleType')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'business_team_members',
            },
        ),
        migrations.CreateModel(
            name='BusinessLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_description', models.CharField(db_index=True, max_length=100, null=True)),
                ('location_type', enumchoicefield.fields.EnumChoiceField(db_index=True, default=lstv_api_v1.models.BusinessLocationType(1), enum_class=lstv_api_v1.models.BusinessLocationType, max_length=6)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.business')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.location')),
            ],
            options={
                'db_table': 'business_locations',
            },
        ),
        migrations.AddField(
            model_name='business',
            name='business_locations',
            field=models.ManyToManyField(related_name='located_business', through='lstv_api_v1.BusinessLocation', to='lstv_api_v1.Location'),
        ),
        migrations.AddField(
            model_name='business',
            name='business_phones',
            field=models.ManyToManyField(db_table='businesses_to_business_phones', related_name='businesses', to='lstv_api_v1.Phone'),
        ),
        migrations.AddField(
            model_name='business',
            name='coverage_locations',
            field=models.ManyToManyField(db_table='businesses_to_coverage_locations', related_name='works_at_business', to='lstv_api_v1.Location'),
        ),
        migrations.AddField(
            model_name='business',
            name='faq',
            field=models.ManyToManyField(db_table='business_to_faq', related_name='faq_businesses', to='lstv_api_v1.Message'),
        ),
        migrations.AddField(
            model_name='business',
            name='groups',
            field=models.ManyToManyField(db_table='businesses_to_business_groups', related_name='group_business', to='lstv_api_v1.BusinessGroupType'),
        ),
        migrations.AddField(
            model_name='business',
            name='profile_image',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.image'),
        ),
        migrations.AddField(
            model_name='business',
            name='properties',
            field=models.ManyToManyField(db_table='businesses_to_properties', related_name='businesses', to='lstv_api_v1.Properties'),
        ),
        migrations.AddField(
            model_name='business',
            name='public_team',
            field=models.ManyToManyField(db_table='business_to_public_personnel', related_name='public_personnel_businesses', to='lstv_api_v1.PublicTeamPerson'),
        ),
        migrations.AddField(
            model_name='business',
            name='public_team_faq',
            field=models.ManyToManyField(db_table='business_to_team_faq', related_name='businesses_for_team_faq', to='lstv_api_v1.Message'),
        ),
        migrations.AddField(
            model_name='business',
            name='reviews',
            field=models.ManyToManyField(db_table='business_to_reviews', related_name='business_in_review', to='lstv_api_v1.Review'),
        ),
        migrations.AddField(
            model_name='business',
            name='roles',
            field=models.ManyToManyField(db_table='business_to_role_types', related_name='business_roles', to='lstv_api_v1.BusinessRoleType'),
        ),
        migrations.AddField(
            model_name='business',
            name='social_links',
            field=models.ManyToManyField(db_table='businesses_to_social_network_links', related_name='social_network_businesses', to='lstv_api_v1.SocialLink'),
        ),
        migrations.AddField(
            model_name='business',
            name='sold_at_businesses',
            field=models.ManyToManyField(db_table='businesses_to_sold_at_businesses', related_name='_business_sold_at_businesses_+', to='lstv_api_v1.Business'),
        ),
        migrations.AddField(
            model_name='business',
            name='subscribers',
            field=models.ManyToManyField(db_table='businesses_to_subscribers', related_name='businesses_subscribed_to', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='business',
            name='tags',
            field=models.ManyToManyField(db_table='businesses_to_tag_types', related_name='businesses', to='lstv_api_v1.TagType'),
        ),
        migrations.AddField(
            model_name='business',
            name='venue_types',
            field=models.ManyToManyField(related_name='business_venues', through='lstv_api_v1.BusinessVenueTypeInfo', to='lstv_api_v1.BusinessVenueType'),
        ),
        migrations.AddField(
            model_name='business',
            name='weighted_roles',
            field=models.ManyToManyField(through='lstv_api_v1.BusinessWeightedRoleType', to='lstv_api_v1.BusinessRoleType'),
        ),
        migrations.AddField(
            model_name='business',
            name='worked_at_cache',
            field=models.ManyToManyField(db_table='businesses_to_weighted_work_location_history', related_name='business_who_worked_there', to='lstv_api_v1.BusinessWeightedWorkLocationHistory'),
        ),
        migrations.AddField(
            model_name='brand',
            name='business',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.business'),
        ),
        migrations.AddField(
            model_name='brand',
            name='logo_image',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lstv_api_v1.image'),
        ),
        migrations.CreateModel(
            name='ArticleViewLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('unique_guest_uuid', models.UUIDField(db_index=True, null=True)),
                ('short_url_token', models.CharField(db_index=True, default=None, max_length=7, null=True)),
                ('migrated_to_log_cluster', models.BooleanField(db_index=True, default=False)),
                ('legacy_post_id', models.IntegerField(db_index=True, null=True)),
                ('legacy_user_id', models.IntegerField(db_index=True, null=True)),
                ('article', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_view_logs', related_query_name='article_views_logs', to='lstv_api_v1.article')),
                ('ip', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.ipaddress')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_view_logs', related_query_name='article_view_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'article_view_log',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='businesses',
            field=models.ManyToManyField(db_table='articles_to_businesses', related_name='articles', to='lstv_api_v1.Business'),
        ),
        migrations.AddField(
            model_name='article',
            name='locations',
            field=models.ManyToManyField(db_table='articles_to_locations', related_name='articles', to='lstv_api_v1.Location'),
        ),
        migrations.AddField(
            model_name='article',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='articles', related_query_name='articles', to='lstv_api_v1.post'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(db_table='articles_to_vibe_types', related_name='articles', to='lstv_api_v1.TagType'),
        ),
        migrations.AddField(
            model_name='article',
            name='thumbnail',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.image'),
        ),
        migrations.CreateModel(
            name='AggregationCacheData',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('object_id', models.UUIDField(db_index=True)),
                ('value', models.IntegerField(db_index=True, null=True)),
                ('value_json', models.JSONField(null=True)),
                ('aggregation_cache', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='aggregation_cache', related_query_name='aggregation_cache', to='lstv_api_v1.aggregationcache')),
            ],
            options={
                'db_table': 'aggregation_cache_data',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='email_verification',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.emailverificationrecord'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='mobile_phone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.phone'),
        ),
        migrations.AddField(
            model_name='user',
            name='profile_image',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lstv_api_v1.image'),
        ),
        migrations.AddField(
            model_name='user',
            name='properties',
            field=models.ManyToManyField(db_table='users_to_properties', related_name='users', to='lstv_api_v1.Properties'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='business',
            unique_together={('slug', 'delete_token')},
        ),
    ]
